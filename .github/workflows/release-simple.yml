name: Simple Release (Fallback)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build All Binaries
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Extract version
        run: |
          VERSION="${{ github.event.inputs.tag }}"
          echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          echo "TAG=$VERSION" >> $GITHUB_ENV

      - name: Build all binaries
        run: |
          mkdir -p dist
          
          echo "Building Linux binary..."
          deno compile \
            --no-check \
            --allow-run \
            --allow-read \
            --allow-write \
            --allow-net \
            --allow-env \
            --allow-sys \
            --target x86_64-unknown-linux-gnu \
            --output dist/nsyte-linux \
            src/cli.ts || echo "Linux build failed"
          
          echo "Building macOS binary..."
          deno compile \
            --no-check \
            --allow-run \
            --allow-read \
            --allow-write \
            --allow-net \
            --allow-env \
            --allow-sys \
            --target x86_64-apple-darwin \
            --output dist/nsyte-macos \
            src/cli.ts || echo "macOS build failed"
          
          echo "Building Windows binary..."
          deno compile \
            --no-check \
            --no-terminal \
            --allow-run \
            --allow-read \
            --allow-write \
            --allow-net \
            --allow-env \
            --allow-sys \
            --target x86_64-pc-windows-msvc \
            --output dist/nsyte-windows.exe \
            src/cli.ts || echo "Windows build failed"
          
          echo "Available binaries:"
          ls -la dist/

      - name: Rename binaries with version
        run: |
          cd dist
          [ -f nsyte-linux ] && cp nsyte-linux nsyte-linux-${{ env.VERSION }}
          [ -f nsyte-macos ] && cp nsyte-macos nsyte-macos-${{ env.VERSION }}
          [ -f nsyte-windows.exe ] && cp nsyte-windows.exe nsyte-windows-${{ env.VERSION }}.exe
          
          echo "Renamed binaries:"
          ls -la

      - name: Create simple release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: nsyte ${{ env.TAG }}
          draft: true
          prerelease: false
          body: |
            ## nsyte ${{ env.TAG }}

            ### Installation

            Download the appropriate binary for your system:

            - **Linux**: `nsyte-linux-${{ env.VERSION }}`
            - **macOS**: `nsyte-macos-${{ env.VERSION }}`
            - **Windows**: `nsyte-windows-${{ env.VERSION }}.exe`

            Make it executable (Linux/macOS):
            ```bash
            chmod +x nsyte-*
            sudo mv nsyte-* /usr/local/bin/nsyte
            ```

            ### Notes
            - This is a simplified release. Some binaries may be missing if cross-compilation failed.
            - Compressed versions are not included in this release.
            - Check the build logs for any errors.
          files: |
            dist/nsyte-linux
            dist/nsyte-macos
            dist/nsyte-windows.exe
            dist/nsyte-linux-${{ env.VERSION }}
            dist/nsyte-macos-${{ env.VERSION }}
            dist/nsyte-windows-${{ env.VERSION }}.exe
          fail_on_unmatched_files: false